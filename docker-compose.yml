networks:
  dev:
    driver: bridge
services:
  pgvector:
    image:  pgvector/pgvector:pg16
    container_name: pgvector
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      TZ: ${TZ}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - pgvector_data:/var/lib/postgresql/data
    restart: on-failure:10
    networks:
      - dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
  
  rag:
    container_name: rag
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      pgvector:
        condition: service_healthy
    restart: on-failure:10
    networks:
      - dev
  
  nginx:
    image: nginx:alpine
    container_name: nginx_proxy
    ports:
      - "80:80"
    volumes:
       - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - rag
    restart: on-failure:10
    networks:
      - dev
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  pgvector_data:
    