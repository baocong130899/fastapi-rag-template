# nginx.conf sample

events {
    worker_connections 1024;  # Maximum number of simultaneous connections per worker
}

http {
    # DNS resolver for container name resolution inside Docker
    resolver 127.0.0.11 ipv6=off valid=30s;

    client_max_body_size 100M;  # Maximum allowed size of client request body.

    upstream rag {
        server rag:8000;  # Define upstream backend “rag” pointing to host rag port 8000.
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ""      close;
    }

    server {
        listen 80 default_server;  # Listen on port 80, this is the default server block.
        server_name _;  # Catch-all server name.

        # CORS headers – allow cross-origin requests.
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

        # Proxy /api path to backend.
        location /api {
            proxy_pass http://rag/api;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_buffering off;
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;

            proxy_intercept_errors off;
        }

        # Proxy /redoc (API documentation).
        location /redoc {
            proxy_pass http://rag/redoc;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }

        # Proxy openapi.json (schema endpoint).
        location /openapi.json {
            proxy_pass http://rag/openapi.json;
            proxy_http_version 1.1;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
    }
}
